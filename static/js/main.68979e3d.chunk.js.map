{"version":3,"sources":["page/common/style.js","page/store/reducer.js","page/store/index.js","page/store/actionsCreator.js","page/common/Header.js","page/common/components/Loading.js","page/common/components/Welcome.js","page/common/components/Time.js","statics/backgrounds/clear-day.jpeg","statics/backgrounds/clear-night.jpeg","page/common/Weather.js","statics/svgs/logo.svg","page/common/Footer.js","App.js","reportWebVitals.js","style.js","index.js"],"names":["InputWrapper","styled","div","ResultWrapper","ResultWeather","BasicInfoWrapper","TemperatureInfoWrapper","HourlyTempWrapper","ForecastWrapper","SixHourChunk","HeaderWrapper","FooterWrapper","defaultState","inputValue","list","listShow","current","location","forecast","respondLoading","respondLoaded","daySelector","nightmode","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","newState","JSON","parse","stringify","value","forecastday","applyMiddleware","thunk","queryWeather","lat","lon","dispatch","axios","get","params","key","q","days","aqi","alerts","then","res","console","log","data","action_queryWeather","loadingWeatherResult","catch","err","action_hideList","action_ShowList","action_inputChanger","e","Header","className","checkedChildren","unCheckedChildren","onChange","document","body","Loading","size","Welcome","color","Time","useState","Date","time","setTime","useEffect","setInterval","toLocaleTimeString","Search","Input","Weather","props","getState","handleStateChange","bind","handleInputonChange","handleInputonFocus","handleInputonBlur","handleQueryWeather","handleOnMouseOver","handleSelectDay","handleOnMouseLeave","handleGPSQuery","subscribe","navigator","geolocation","getCurrentPosition","actionsCreator","coords","latitude","longitude","alert","i","j","temporary","hourArray","hourList","this","hour","length","slice","autoplay","map","item","index","style","tmpItem","tmpIndex","substring","src","condition","icon","temp_c","setState","target","setTimeout","placeholder","onFocus","onBlur","onSearch","enterButton","AimOutlined","bordered","onMouseOver","onMouseLeave","dataSource","renderItem","Item","onClick","name","backgroundImage","is_day","dayBg","nightBg","region","country","last_updated","text","humidity","wind_mph","feelslike_c","handleChopHourlyInfo","date","day","avgtemp_c","astro","sunrise","sunset","React","Component","Footer","footColor","setfootColor","logo","alt","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAIaA,EAAeC,IAAOC,IAAV,4EAMZC,EAAiBF,IAAOC,IAAX,uKAUbE,EAAgBH,IAAOC,IAAV,+LAUbG,EAAmBJ,IAAOC,IAAV,ugBA8BhBI,EAAyBL,IAAOC,IAAV,0gBA6BtBK,EAAoBN,IAAOC,IAAV,0BAEjBM,EAAkBP,IAAOC,IAAV,ggBA2BfO,EAAeR,IAAOC,IAAV,4BAIZQ,EAAgBT,IAAOC,IAAV,2TAqBbS,EAAgBV,IAAOC,IAAV,uR,QC7IpBU,EAAe,CACjBC,WAAY,GACZC,KAAK,GACLC,UAAU,EAEVC,QAAQ,GACRC,SAAS,GACTC,SAAS,GACTC,gBAAgB,EAChBC,eAAe,EAEfC,YAAa,IACbC,WAAW,G,QCVTC,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EAJDC,aDWC,WAA+B,IAA9BC,EAA6B,uDAAvBjB,EAAckB,EAAS,uCACzC,OAAOA,EAAOC,MACV,IAAK,oBACD,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASlB,KAAOA,KAAKgB,EAAOM,MACrBJ,EAEX,IAAK,qBACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAI3C,OAHAG,EAAShB,QAAUc,EAAOM,MAAMpB,QAChCgB,EAASf,SAAWa,EAAOM,MAAMnB,SACjCe,EAASd,SAAWY,EAAOM,MAAMlB,SAASmB,YACnCL,EAEX,IAAK,sBACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAG3C,OAFAG,EAASb,gBAAiB,EAC1Ba,EAASZ,eAAgB,EAClBY,EAEX,IAAK,yBACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAG3C,OAFAG,EAASb,gBAAiB,EAC1Ba,EAASZ,eAAgB,EAClBY,EAEX,IAAK,YACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASjB,UAAW,EACbiB,EAEX,IAAK,YACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASjB,UAAW,EACbiB,EAEX,IAAK,mBACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASV,UAAaU,EAASV,WAAU,EAAQU,EAASV,WAAU,EAC7DU,EAGX,IAAK,wBACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAG3C,OAFAG,EAASb,gBAAiB,EAC1Ba,EAASZ,eAAgB,EAClBY,EAEX,IAAK,aACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASX,YAAcS,EAAOM,MACvBJ,EAEX,IAAK,gCACD,IAAMA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASZ,eAAgB,EAClBY,EAEX,QACI,OAAOH,KCtEiBN,EAChCe,YAAgBC,O,iBCgBPC,EAAe,SAACC,EAAIC,GAC7B,OAAO,SAACC,GACJC,IAAMC,IAAI,8CAA8C,CACpDC,OAAO,CACHC,IAAM,kCACNC,EAAIP,EAAI,IAAIC,EACZO,KAAO,EACPC,IAAM,KACNC,OAAS,QAGhBC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIG,MAChBb,EAASc,EAAoBJ,EAAIG,OACjCb,EAASe,QAEZC,OAAM,SAACC,GACJN,QAAQC,IAAIK,MAEfR,MAAK,WACFT,EAASkB,UAMRA,EAAkB,iBAAK,CAChC9B,KAAO,cAGE+B,EAAkB,iBAAK,CAChC/B,KAAO,cAGLgC,EAAsB,SAACC,GAAD,MAAM,CAC9BjC,KAAM,oBACNK,MAAO4B,IAaEN,EAAuB,iBAAK,CACrC3B,KAAM,2BAIG0B,EAAsB,SAACO,GAAD,MAAM,CACrCjC,KAAK,qBACLK,MAAO4B,I,OCxEI,SAASC,IAOpB,OAAQ,eAACvD,EAAD,WACJ,qBAAKwD,UAAU,iBACf,qBAAKA,UAAU,eAAf,SAA8B,cAAC,IAAD,CAAQC,gBAAgB,eAAKC,kBAAkB,eAAKC,SAPtF,WACI1C,EAAMgB,SDyEyB,CACnCZ,KAAM,qBCzE2B,KAA5BuC,SAASC,KAAKL,UAAsBI,SAASC,KAAKL,UAAY,QAAUI,SAASC,KAAKL,UAAY,W,0ECE5FM,MANf,WACI,OAAQ,cAAC,IAAD,UACJ,cAAC,IAAD,CAAMC,KAAK,a,UCNJ,SAASC,KACpB,OAAQ,8BACA,cAAC,KAAD,CAAQC,MAAM,c,aCHX,SAASC,KAEpB,MAAwBC,mBAAS,IAAIC,MAArC,oBAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,qBAAU,WACNC,aAAY,WACRF,EAAQ,IAAIF,QACd,QAGE,8BACHC,EAAKI,uBCbC,WAA0B,uCCA1B,OAA0B,yC,wCCoBjCC,GAAWC,KAAXD,OAEaE,G,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACD1D,MAAMF,EAAM6D,WACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,gBACzB,EAAKI,mBAAqB,EAAKA,mBAAmBJ,KAAxB,gBAC1B,EAAKK,kBAAoB,EAAKA,kBAAkBL,KAAvB,gBACzB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,mBAAqB,EAAKA,mBAAmBP,KAAxB,gBAC1B,EAAKQ,eAAiB,EAAKA,eAAeR,KAApB,gBACtB/D,EAAMwE,UAAU,EAAKV,mBAZP,E,kDAiClB,WACI9D,EAAMgB,SPUuB,CACjCZ,KAAM,wBOVCqE,UAAUC,YACTD,UAAUC,YAAYC,oBAAmB,SAACjD,GACtC1B,EAAMgB,SAAU4D,EAA4BlD,EAAImD,OAAOC,SAASpD,EAAImD,OAAOE,eAGhFC,MAAM,8E,kCAGb,WACI,IAAIC,EAAEC,EAAGC,EACLC,EAAY,GACVC,EAAWC,KAAKpF,MAAMX,SAAS+F,KAAKpF,MAAMR,aAAa6F,KAE7D,IAAKN,EAAI,EAAEC,EAAIG,EAASG,OAAQP,EAAIC,EAAGD,GAJX,EAKxBE,EAAYE,EAASI,MAAMR,EAAGA,EALN,GAMxBG,EAAS,sBAAOA,GAAP,CAAiBD,IAG9B,OAAQ,cAAC,KAAD,CAAUO,UAAQ,EAAlB,SAEAN,EAAUO,KAAK,SAACC,EAAKC,GACjB,OACI,cAAC/G,EAAD,UACA,qBAAKyD,UAAU,SAAqBuD,MAAO,CAAC,QAAU,OAAQ,eAAkB,SAAS,WAAc,SAAS,UAAa,SAA7H,SAEIF,EAAKD,KAAI,SAACI,EAAQC,GACd,OACQ,sBAAoBF,MAAO,CAAC,QAAU,OAAQ,eAAkB,SAAS,WAAc,SAAS,cAAiB,UAAjH,UACI,8BAAMC,EAAQ3C,KAAK6C,UAAU,MAC7B,8BAAK,qBAAKC,IAAKH,EAAQI,UAAUC,SACjC,8BAAML,EAAQM,OAAO,aAHfL,OAJGH,IADVA,U,+BAmBvC,WACIP,KAAKgB,SAAStG,EAAM6D,c,iCAExB,SAAoBxB,GAChBrC,EAAMgB,SPtGe,SAACqB,GAC1B,OAAO,SAACrB,GACJC,IAAMC,IAAI,kDAAkD,CACxDC,OAAO,CACHE,EAAGgB,EAAEkE,OAAO9F,SAGnBgB,MAAK,SAACC,GACoB,IAApBA,EAAIG,KAAK2D,OACRxE,EAAUkB,MAEVlB,EAAUoB,EAAoBV,EAAIG,OAClCb,EAAUmB,SAGjBH,OAAM,SAACC,GACJN,QAAQC,IAAIK,OOsFA2C,CAA6BvC,M,gCAEjD,WACkC,IAA3BiD,KAAKpF,MAAMf,KAAKqG,QACfxF,EAAMgB,SAAU4D,O,+BAOxB,WACI4B,YAAW,WACPxG,EAAMgB,SAAU4D,OAClB,O,gCAEN,SAAmB9D,EAAIC,GACnBf,EAAMgB,SAAU4D,KAChB5E,EAAMgB,SPtDuB,CACjCZ,KAAM,wBOsDFJ,EAAMgB,SAAU4D,EAA4B9D,EAAIC,M,+BAEpD,WACIf,EAAMgB,SAAU4D,O,gCAEpB,WACI5E,EAAMgB,SAAU4D,O,6BAEpB,SAAgBvC,GACZrC,EAAMgB,SP7CW,SAACqB,GAAD,MAAM,CAC3BjC,KAAK,aACLK,MAAM4B,GO2CcuC,CAAyBvC,M,oBAE7C,WAAS,IAAD,OACJ,OACI,qCACA,eAAChE,EAAD,WACI,cAACoF,GAAD,CAAQgD,YAAY,mBAChB/D,SAAU4C,KAAKtB,oBACf0C,QAASpB,KAAKrB,mBACd0C,OAAQrB,KAAKpB,kBACb0C,SAAUtB,KAAKf,eACfsC,YAAc,cAACC,GAAA,EAAD,MAGjBxB,KAAKpF,MAAMd,SACR,cAAC,KAAD,CAAM2H,UAAQ,EACdjB,MAAS,CAAE,WAAc,QAAS,SAAW,WAAW,MAAQ,MAAM,OAAS,IAC/EkB,YAAe1B,KAAKlB,kBACpB6C,aAAgB3B,KAAKhB,mBACrB4C,WAAc5B,KAAKpF,MAAMf,KACzBgI,WAAe,SAACvB,GAAD,OAAS,eAAC,KAAKwB,KAAN,CAAWC,QAAU,WAAK,EAAKlD,mBAAmByB,EAAK9E,IAAI8E,EAAK7E,MAAhE,cAA2E6E,EAAK0B,WAC1G,MAGN,cAAC9I,EAAD,UAEC8G,KAAKpF,MAAMT,cACR,eAAChB,EAAD,CAAeqH,MAAO,CAAEyB,gBAAgD,IAA9BjC,KAAKpF,MAAMb,QAAQmI,OAApB,cAA2CC,GAA3C,mBAA2DC,GAA3D,MAAzC,UACI,eAAChJ,EAAD,WACI,qBAAK6D,UAAU,eAAf,SAA+B+C,KAAKpF,MAAMZ,SAASgI,KAAM,MAAMhC,KAAKpF,MAAMZ,SAASqI,OAAO,MAAMrC,KAAKpF,MAAMZ,SAASsI,UACpH,qBAAKrF,UAAU,cAAf,SAA6B,cAACU,GAAD,MAC7B,qBAAKV,UAAU,cAAf,SAA8B,gBAAgB+C,KAAKpF,MAAMb,QAAQwI,kBAErE,eAAClJ,EAAD,WACI,sBAAK4D,UAAU,mBAAf,UACI,qBAAK2D,IAAKZ,KAAKpF,MAAMb,QAAQ8G,UAAUC,OACvC,4BAAId,KAAKpF,MAAMb,QAAQ8G,UAAU2B,OACjC,8BAAIxC,KAAKpF,MAAMb,QAAQgH,OAAQ,SAA/B,UAEJ,sBAAK9D,UAAU,oBAAf,UACI,4BAAI,cAAc+C,KAAKpF,MAAMb,QAAQ0I,WACrC,4BAAI,UAAUzC,KAAKpF,MAAMb,QAAQ2I,SAAS,SAC1C,4BAAI,cAAc1C,KAAKpF,MAAMb,QAAQ4I,YAAc,iBAG3D,cAACrJ,EAAD,UAEI0G,KAAK4C,yBAGT,cAACrJ,EAAD,UAEIyG,KAAKpF,MAAMX,SAASoG,KAAI,SAACC,EAAKC,GAC1B,OAAQ,sBAAKtD,UAAa,EAAKrC,MAAMR,aAAemG,EAAS,sBAAwB,eAA4BwB,QAAS,kBAAI,EAAKhD,gBAAgBwB,IAA3I,UACJ,8BAAMD,EAAKuC,OACX,8BAAK,qBAAKjC,IAAKN,EAAKwC,IAAIjC,UAAUC,SAClC,8BAAMR,EAAKwC,IAAIC,UAAU,WACzB,gCAAK,mBAAG9F,UAAU,WAAb,oBAAqCqD,EAAK0C,MAAMC,WACrD,gCAAK,mBAAGhG,UAAU,WAAb,oBAAqCqD,EAAK0C,MAAME,YALiD3C,WAWtHP,KAAKpF,MAAMV,eAAkB,cAAC,EAAD,IAAc,cAACuD,GAAD,a,GA9KtB0F,IAAMC,WCtB5B,OAA0B,iCCK1B,SAASC,KAEpB,MAAiCzF,mBAASlD,EAAM6D,YAAhD,oBAAO+E,EAAP,KAAiBC,EAAjB,KAQA,OANAvF,qBAAU,WACNtD,EAAMwE,WAAW,WACbqE,EAAa7I,EAAM6D,kBAKvB,eAAC7E,EAAD,CAAeuD,UAAYqG,EAAUjJ,UAAY,SAAS,GAA1D,UACI,oDAAsB,qBAAKuG,IAAK4C,GAAMvG,UAAU,WAAWwG,IAAI,YAC/D,2CAAa,4BAAG,yCAAhB,2BAAyD,mBAAGC,KAAK,kCAAR,SAA0C,mBAAGzG,UAAU,WAAb,4B,OCIhG0G,I,GAAAA,GAhBf,WACE,OACE,sBAAK1G,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,cAACD,EAAD,MAEJ,kCACI,cAAC,GAAD,MAEJ,iCACI,cAACqG,GAAD,UCJGO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3H,MAAK,YAAkD,IAA/C4H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCqCCO,GA1CKC,YAAH,kuBCMjBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEFnH,SAASoH,eAAe,SAM1Bb,O","file":"static/js/main.68979e3d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n\n// Weather part components\nexport const InputWrapper = styled.div`\n    Input{\n        border-radius:10px;\n    }\n`;\n\nexport const ResultWrapper  = styled.div`\n    margin-top 30px;\n\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ResultWeather = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width:1024px;\n    max-height:582px;\n    padding-top: 20px;\n    border-radius: 30px;\n    color:white;\n`;\n\nexport const BasicInfoWrapper = styled.div`\n    display:flex;\n    margin: 10px;\n    padding: 10px;\n\n    .locationInfo{\n        flex: 1;\n        display: flex;\n        align-content: center;\n    }\n\n    .currentTime{\n        flex:1;\n        align-content: center;\n        justify-content: flex-end;\n        display:flex;\n\n        div{\n            margin: 0 auto;\n        }\n    }\n\n    .updatedInfo{\n        flex: 1;\n        display: flex;\n        align-content: center;\n        justify-content: flex-end;\n    }\n`;\n\nexport const TemperatureInfoWrapper = styled.div`\n\n    display: flex;\n\n    div > p {\n        display: block;\n    }\n\n    .majorWeatherInfo{\n        flex:1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n\n        > img {\n            width:64px;\n            height:64px;\n        }\n    }\n    .mirrorWeatherInfo{\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n`;\n\nexport const HourlyTempWrapper = styled.div``;\n\nexport const ForecastWrapper = styled.div`\n    display:flex;\n\n    .forecast-day{\n        flex:1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        cursor:pointer;\n\n        &.active{\n            background-color:rgb(189, 245, 241);\n            color:black;\n            cursor:crosshair;\n        }\n    }\n\n    >div:first-child{\n        border-radius: 0 0 0 30px;\n    }\n    >div:last-child{\n        border-radius:0 0 30px 0;\n    }\n\n`;\n\nexport const SixHourChunk = styled.div`\n`;\n\n// Header part components\nexport const HeaderWrapper = styled.div`\n    display: flex;\n    height : 10%;\n    max-height: 64px;\n\n    > div {\n        flex : 1;\n    }\n\n    .descriptions{\n        padding: 5px;\n    }\n    .toggleSwitch{\n        display: flex;\n        justify-content: flex-end;\n        padding: 5px;\n        margin:20px;\n    }\n`;\n\n// Footer part component\nexport const FooterWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    row-gap: 10px;\n    width:100%;\n    text-align: center;\n\n    &.active{\n        background: rgb(50,50,50);\n        color:white;\n    }\n`; ","\n\nconst defaultState = {\n    inputValue: '',\n    list:[],\n    listShow: false,\n\n    current:'',\n    location:'',\n    forecast:'',\n    respondLoading: false,\n    respondLoaded: false,\n\n    daySelector: '0',\n    nightmode: false,\n}\n\nexport default (state=defaultState, action)=>{\n    switch(action.type) {\n        case 'load_list_respond' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.list = list,action.value;\n            return newState;\n        }\n        case 'load_forecast_info' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.current = action.value.current;\n            newState.location = action.value.location;\n            newState.forecast = action.value.forecast.forecastday;\n            return newState;\n        }\n        case 'loading_list_result' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.respondLoading = true;\n            newState.respondLoaded = false;\n            return newState;\n        }\n        case 'loading_weather_result' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.respondLoading = false;\n            newState.respondLoaded = true;\n            return newState;\n        }\n        case 'hide_list' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.listShow = false;\n            return newState;\n        }\n        case 'show_list' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.listShow = true;\n            return newState;\n        }\n        case 'switch_nightmode' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.nightmode ? (newState.nightmode=false):(newState.nightmode=true);\n            return newState;\n        }\n        // test function for loading components\n        case 'loading_function_test' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.respondLoading = true;\n            newState.respondLoaded = false;\n            return newState;\n        }\n        case 'select_day' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.daySelector = action.value;\n            return newState\n        }\n        case 'change_respondLoaded_to_false' :{\n            const newState = JSON.parse(JSON.stringify(state));\n            newState.respondLoaded = false;\n            return newState\n        }\n        default :\n            return state;\n    }\n}","import { createStore , compose, applyMiddleware} from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore( reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import axios from 'axios';\n\nexport const inputonChange = (e)=>{\n    return (dispatch)=>{\n        axios.get('https://www.weatherapi.com/weather/search.ashx?',{\n            params:{\n                q: e.target.value\n            }\n        })\n        .then((res)=>{\n            if(res.data.length === 0){\n                dispatch( action_hideList() );\n            }else{\n                dispatch( action_inputChanger(res.data) );\n                dispatch( action_ShowList() );\n            }\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n}\n\nexport const queryWeather = (lat,lon)=>{\n    return (dispatch)=>{\n        axios.get('http://api.weatherapi.com/v1/forecast.json?',{\n            params:{\n                key : '757a8898541844c2916101944210607',\n                q : lat+','+lon,\n                days : 3,\n                aqi : 'no',\n                alerts : 'no',\n            }\n        })\n        .then((res)=>{\n            console.log(res.data);\n            dispatch(action_queryWeather(res.data));\n            dispatch(loadingWeatherResult());\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n        .then(()=>{\n            dispatch(action_hideList());\n        });\n    }\n}\n\n//hide List\nexport const action_hideList = ()=>({\n    type : 'hide_list'\n})\n//show List\nexport const action_ShowList = ()=>({\n    type : 'show_list'\n})\n//Input change trigger\nconst action_inputChanger = (e)=>({\n    type: 'load_list_respond',\n    value: e\n});\n\n//慎用！！！【手动】修改/隐藏 respondLoaded->false\nexport const changeRespondLoadedToFalse=()=>({\n    type:'change_respondLoaded_to_false'\n})\n\n//开始加载请求新信息，respondLoading->true && respondLoaded->false(请求新的API，不抹去老STATE的状态但是把已加载修改成false)\nexport const loadingListReult = ()=>({\n    type: 'loading_list_result',\n})\n//加载完成新信息respondLoading->false && respondLoaded->true\nexport const loadingWeatherResult = ()=>({\n    type: 'loading_weather_result',\n})\n\n//加载所有API信息\nexport const action_queryWeather = (e)=>({\n    type:'load_forecast_info',\n    value: e,\n})\n\n//切换夜间模式\nexport const nightMode_switch = () => ({\n    type: 'switch_nightmode',\n})\n\nexport const selectDay = (e)=>({\n    type:'select_day',\n    value:e\n})","import { Switch } from 'antd';\nimport 'antd/dist/antd.css';\nimport { HeaderWrapper } from './style';\n\nimport store from '../store';\nimport * as actionsCreator from '../store/actionsCreator';\n\nexport default function Header(){\n\n    function handleOnchange(){\n        store.dispatch( actionsCreator.nightMode_switch() );\n        (document.body.className === '' ) ? (document.body.className = 'bk-bg'):(document.body.className = ''); //在body上面加class\n    }\n\n    return (<HeaderWrapper>\n        <div className='descriptions'></div>\n        <div className='toggleSwitch'><Switch checkedChildren='🌚' unCheckedChildren='🌞' onChange={handleOnchange} /></div>\n    </HeaderWrapper>)\n}","/*\n    加载框，加载东西的时候专用\n*/\n\nimport 'antd/dist/antd.css';\nimport { Spin, Space } from 'antd';\n\nfunction Loading(){\n    return (<Space>\n        <Spin size=\"large\" />\n    </Space>)\n}\n\nexport default Loading;","import React from 'react';\nimport { Ripple } from 'react-spinners-css';\n\nexport default function Welcome (){\n    return (<div>\n            <Ripple color=\"#98E0FF\" />\n        </div>)\n}","import { useEffect, useState } from \"react\"\n\nexport default function Time(){\n    \n    const [time, setTime] = useState(new Date());\n\n    useEffect(()=>{\n        setInterval(()=>{\n            setTime(new Date());\n        },1000)\n    });\n\n    return (<div>\n        {time.toLocaleTimeString()}\n    </div>)\n}","export default __webpack_public_path__ + \"static/media/clear-day.5575ef05.jpeg\";","export default __webpack_public_path__ + \"static/media/clear-night.3539fa81.jpeg\";","import React from 'react';\n\nimport store from '../store';\nimport * as actionsCreator from '../store/actionsCreator';\n\nimport Loading from './components/Loading';\nimport Welcome from './components/Welcome';\nimport Time from './components/Time';\nimport dayBg from '../../statics/backgrounds/clear-day.jpeg';\nimport nightBg from '../../statics/backgrounds/clear-night.jpeg';\n\nimport 'antd/dist/antd.css';\nimport { Input, List, Carousel,} from 'antd';\nimport { InputWrapper, ResultWrapper, ResultWeather, \n    BasicInfoWrapper, TemperatureInfoWrapper, \n    HourlyTempWrapper, ForecastWrapper, SixHourChunk } from './style';\n\nimport { AimOutlined } from '@ant-design/icons';\n\n\nconst { Search } = Input;\n\nexport default class Weather extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state=store.getState();\n        this.handleStateChange = this.handleStateChange.bind(this);\n        this.handleInputonChange = this.handleInputonChange.bind(this);\n        this.handleInputonFocus = this.handleInputonFocus.bind(this);\n        this.handleInputonBlur = this.handleInputonBlur.bind(this);\n        this.handleQueryWeather = this.handleQueryWeather.bind(this);\n        this.handleOnMouseOver = this.handleOnMouseOver.bind(this);\n        this.handleSelectDay = this.handleSelectDay.bind(this);\n        this.handleOnMouseLeave = this.handleOnMouseLeave.bind(this);\n        this.handleGPSQuery = this.handleGPSQuery.bind(this);\n        store.subscribe(this.handleStateChange);\n    }\n\n    // Test Method / delete | change after complete!!!\n    // componentDidMount(){\n    //     console.log('Helloworld');\n    //     axios.get('./apis/test.json').catch(err=>console.log(err)).then((res)=>{\n    //         store.dispatch( actionsCreator.action_queryWeather(res.data) );\n    //         store.dispatch( actionsCreator.loadingWeatherResult());\n    //     })\n        \n    //     setTimeout(() => {\n    //         store.dispatch(({type:'loading_function_test'}))\n    //     }, 3000);\n    // }\n\n    /*\n        每小时展示时间的小物件\n        考虑手机版屏幕适配调整\n    */\n\n    handleGPSQuery(){\n        store.dispatch( actionsCreator.loadingListReult());\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition((res)=>{ \n                store.dispatch( actionsCreator.queryWeather(res.coords.latitude,res.coords.longitude))\n            })\n        }else{\n           alert('您的浏览器不支持地理定位');\n        }\n    }\n    handleChopHourlyInfo(){\n        let i,j, temporary, chunk = 6;\n        let hourArray = [];\n        const hourList = this.state.forecast[this.state.daySelector].hour;\n\n        for (i = 0,j = hourList.length; i < j; i += chunk) {\n            temporary = hourList.slice(i, i + chunk);\n            hourArray = [...hourArray,temporary];\n        }\n        // console.log(hourList);\n        return (<Carousel autoplay>\n            {\n                hourArray.map( (item,index)=>{\n                    return (\n                        <SixHourChunk key={index}>\n                        <div className='6trunk' key={index} style={{'display':'flex', 'justifyContent': 'center','alignItems': 'center','columnGap': '100px'}}>\n                        {\n                            item.map((tmpItem,tmpIndex)=>{\n                                return (\n                                        <div key={tmpIndex} style={{'display':'flex', 'justifyContent': 'center','alignItems': 'center','flexDirection': 'column'}}>\n                                            <div>{tmpItem.time.substring(11)}</div>\n                                            <div><img src={tmpItem.condition.icon} /></div>\n                                            <div>{tmpItem.temp_c+' °C'}</div>\n                                        </div>)\n                            })\n                        }\n                        </div>\n                        </SixHourChunk>\n                    )\n                })\n            }\n        </Carousel>)\n    }\n    handleStateChange(){\n        this.setState(store.getState());\n    }\n    handleInputonChange(e){\n        store.dispatch( actionsCreator.inputonChange(e) ); //onChange handle API call\n    }\n    handleInputonFocus(){\n        if(this.state.list.length !== 0)\n            store.dispatch( actionsCreator.action_ShowList() ); //先判别state是不是空，然后判别是不是showList\n    }\n    /*\n        1. 延迟500毫秒，让点击li先于此事件触发。不然li点击事件会触发不了\n        2. listshow->false\n        3. list触发时,添加CSStransition动画\n    */\n    handleInputonBlur(){\n        setTimeout(()=>{\n            store.dispatch( actionsCreator.action_hideList() );\n        },500);\n    }\n    handleQueryWeather(lat,lon){\n        store.dispatch( actionsCreator.action_hideList() ); //listshow->false\n        store.dispatch( actionsCreator.loadingListReult() ); //respondLoading->true\n        store.dispatch( actionsCreator.queryWeather(lat,lon) ); //Querying weather info\n    }\n    handleOnMouseOver(){\n        store.dispatch( actionsCreator.action_ShowList() );\n    }\n    handleOnMouseLeave(){\n        store.dispatch( actionsCreator.action_hideList() );\n    }\n    handleSelectDay(e){\n        store.dispatch( actionsCreator.selectDay(e));\n    }\n    render(){\n        return (\n            <>\n            <InputWrapper>\n                <Search placeholder='Enter a location'\n                    onChange={this.handleInputonChange}\n                    onFocus={this.handleInputonFocus}\n                    onBlur={this.handleInputonBlur}\n                    onSearch={this.handleGPSQuery}\n                    enterButton= {<AimOutlined />}\n                    />\n                {\n                (this.state.listShow) ? (\n                    <List bordered\n                    style = {{ 'background': 'white', 'position':'absolute','width':'50%','zIndex':10}}\n                    onMouseOver = {this.handleOnMouseOver}\n                    onMouseLeave = {this.handleOnMouseLeave}\n                    dataSource = {this.state.list}\n                    renderItem = { (item)=>(<List.Item onClick={ ()=>{this.handleQueryWeather(item.lat,item.lon)} } > {item.name}</List.Item>) }/>\n                ):''\n                }\n            </InputWrapper>\n            <ResultWrapper>\n            {\n            (this.state.respondLoaded) ? (\n                <ResultWeather style={{ backgroundImage: (this.state.current.is_day === 1) ? `url(${dayBg})`:`url(${nightBg})` }}>\n                    <BasicInfoWrapper>\n                        <div className='locationInfo'>{this.state.location.name +' , '+this.state.location.region+' , '+this.state.location.country}</div>\n                        <div className='currentTime'><Time /></div>\n                        <div className='updatedInfo'>{'Last updated '+this.state.current.last_updated}</div>\n                    </BasicInfoWrapper>\n                    <TemperatureInfoWrapper>\n                        <div className='majorWeatherInfo'>\n                            <img src={this.state.current.condition.icon} /> \n                            <p>{this.state.current.condition.text}</p>\n                            <p>{this.state.current.temp_c +' °C'} </p>\n                        </div>\n                        <div className='mirrorWeatherInfo'>\n                            <p>{'Humidity : '+this.state.current.humidity}</p>\n                            <p>{'Wind : '+this.state.current.wind_mph+' mph'}</p>\n                            <p>{'Feels like '+this.state.current.feelslike_c + ' °C'}</p>\n                        </div>\n                    </TemperatureInfoWrapper>\n                    <HourlyTempWrapper>\n                    {\n                        this.handleChopHourlyInfo()\n                    }\n                    </HourlyTempWrapper>\n                    <ForecastWrapper>\n                    {\n                        this.state.forecast.map((item,index)=>{\n                            return (<div className={ (this.state.daySelector == index) ? 'forecast-day active' : 'forecast-day'} key={index} onClick={()=>this.handleSelectDay(index)} >\n                                <div>{item.date}</div>\n                                <div><img src={item.day.condition.icon} /></div>\n                                <div>{item.day.avgtemp_c+' °C'}</div>\n                                <div><i className='iconfont'>&#xe633;</i>{item.astro.sunrise}</div>\n                                <div><i className='iconfont'>&#xe632;</i>{item.astro.sunset}</div>\n                            </div>)\n                        })\n                    }\n                    </ForecastWrapper>\n                </ResultWeather>\n            ):( this.state.respondLoading ? (<Loading />):(<Welcome />))\n            }\n            </ResultWrapper>\n            </>)\n    }\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\nimport { FooterWrapper } from './style';\nimport store from '../store';\nimport logo from '../../statics/svgs/logo.svg';\n\nexport default function Footer (){\n    \n    const [footColor,setfootColor] = useState(store.getState());\n\n    useEffect(()=>{\n        store.subscribe( ()=>{\n            setfootColor(store.getState());\n        } );\n    })\n\n    return (\n        <FooterWrapper className={ footColor.nightmode ? 'active':''}>\n            <div>Power by reactJS <img src={logo} className=\"App-logo\" alt=\"logo\" /></div>\n            <div>Made by <a><i>James </i></a>for more projects visit <a href='https://github.com/JamesGao0908'><i className='iconfont'>&#xe600;</i></a></div>\n        </FooterWrapper>)\n    \n}","import './App.css';\nimport Header from './page/common/Header';\nimport Weather from './page/common/Weather';\nimport Footer from './page/common/Footer';\nimport './statics/iconfont/iconfont.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <Header />\n        </header>\n        <section>\n            <Weather />\n        </section>\n        <footer>\n            <Footer />\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\nbody {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    \n    &.bk-bg{\n        background-color:rgb(50, 50, 50);\n    }\n}\n\n\ncode {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n\n.ant-carousel .slick-dots{\n    position: relative  !important;\n    margin-top:50px;\n}\n.ant-carousel{\n    margin-top:10px;\n    color : white !important;\n}\n\ndiv#root{\n    min-height: 100vh;\n}\n\n*{\n    box-sizing:border-box;\n}\n\n`\n\n\nexport default GlobalStyle;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport GlobalStyle from './style.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}